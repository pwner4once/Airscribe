<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WiimoteLib</name>
    </assembly>
    <members>
        <member name="T:WiimoteLib.HIDImports">
            <summary>
            Win32 import information for use with the Wiimote library
            </summary>
        </member>
        <member name="T:WiimoteLib.Wiimote">
            <summary>
            Implementation of Wiimote
            </summary>
        </member>
        <member name="M:WiimoteLib.Wiimote.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:WiimoteLib.Wiimote.Connect">
            <summary>
            Connect to a Wiimote paired to the PC via Bluetooth
            </summary>
        </member>
        <member name="M:WiimoteLib.Wiimote.Disconnect">
            <summary>
            Disconnect from the controller and stop reading data from it
            </summary>
        </member>
        <member name="M:WiimoteLib.Wiimote.BeginAsyncRead">
            <summary>
            Start reading asynchronously from the controller
            </summary>
        </member>
        <member name="M:WiimoteLib.Wiimote.OnReadData(System.IAsyncResult)">
            <summary>
            Callback when data is ready to be processed
            </summary>
            <param name="ar">State information for the callback</param>
        </member>
        <member name="M:WiimoteLib.Wiimote.ParseInputReport(System.Byte[])">
            <summary>
            Parse a report sent by the Wiimote
            </summary>
            <param name="buff">Data buffer to parse</param>
            <returns>Returns a boolean noting whether an event needs to be posted</returns>
        </member>
        <member name="M:WiimoteLib.Wiimote.InitializeExtension">
            <summary>
            Handles setting up an extension when plugged in
            </summary>
        </member>
        <member name="M:WiimoteLib.Wiimote.DecryptBuffer(System.Byte[])">
            <summary>
            Decrypts data sent from the extension to the Wiimote
            </summary>
            <param name="buff">Data buffer</param>
            <returns>Byte array containing decoded data</returns>
        </member>
        <member name="M:WiimoteLib.Wiimote.ParseButtons(System.Byte[])">
            <summary>
            Parses a standard button report into the ButtonState struct
            </summary>
            <param name="buff">Data buffer</param>
        </member>
        <member name="M:WiimoteLib.Wiimote.ParseAccel(System.Byte[])">
            <summary>
            Parse accelerometer data
            </summary>
            <param name="buff">Data buffer</param>
        </member>
        <member name="M:WiimoteLib.Wiimote.ParseIR(System.Byte[])">
            <summary>
            Parse IR data from report
            </summary>
            <param name="buff">Data buffer</param>
        </member>
        <member name="M:WiimoteLib.Wiimote.ParseExtension(System.Byte[],System.Int32)">
            <summary>
            Parse data from an extension controller
            </summary>
            <param name="buff">Data buffer</param>
            <param name="offset">Offset into data buffer</param>
        </member>
        <member name="M:WiimoteLib.Wiimote.ParseReadData(System.Byte[])">
            <summary>
            Parse data returned from a read report
            </summary>
            <param name="buff">Data buffer</param>
        </member>
        <member name="M:WiimoteLib.Wiimote.GetRumbleBit">
            <summary>
            Returns whether rumble is currently enabled.
            </summary>
            <returns>Byte indicating true (0x01) or false (0x00)</returns>
        </member>
        <member name="M:WiimoteLib.Wiimote.ReadCalibration">
            <summary>
            Read calibration information stored on Wiimote
            </summary>
        </member>
        <member name="M:WiimoteLib.Wiimote.SetReportType(WiimoteLib.InputReport,System.Boolean)">
            <summary>
            Set Wiimote reporting mode (if using an IR report type, IR sensitivity is set to WiiLevel3)
            </summary>
            <param name="type">Report type</param>
            <param name="continuous">Continuous data</param>
        </member>
        <member name="M:WiimoteLib.Wiimote.SetReportType(WiimoteLib.InputReport,WiimoteLib.IRSensitivity,System.Boolean)">
            <summary>
            Set Wiimote reporting mode
            </summary>
            <param name="type">Report type</param>
            <param name="irSensitivity">IR sensitivity</param>
            <param name="continuous">Continuous data</param>
        </member>
        <member name="M:WiimoteLib.Wiimote.SetLEDs(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Set the LEDs on the Wiimote
            </summary>
            <param name="led1">LED 1</param>
            <param name="led2">LED 2</param>
            <param name="led3">LED 3</param>
            <param name="led4">LED 4</param>
        </member>
        <member name="M:WiimoteLib.Wiimote.SetLEDs(System.Int32)">
            <summary>
            Set the LEDs on the Wiimote
            </summary>
            <param name="leds">The value to be lit up in base2 on the Wiimote</param>
        </member>
        <member name="M:WiimoteLib.Wiimote.SetRumble(System.Boolean)">
            <summary>
            Toggle rumble
            </summary>
            <param name="on">On or off</param>
        </member>
        <member name="M:WiimoteLib.Wiimote.GetStatus">
            <summary>
            Retrieve the current status of the Wiimote and extensions.  Replaces GetBatteryLevel() since it was poorly named.
            </summary>
        </member>
        <member name="M:WiimoteLib.Wiimote.EnableIR(WiimoteLib.IRMode,WiimoteLib.IRSensitivity)">
            <summary>
            Turn on the IR sensor
            </summary>
            <param name="mode">The data report mode</param>
            <param name="irSensitivity">IR sensitivity</param>
        </member>
        <member name="M:WiimoteLib.Wiimote.DisableIR">
            <summary>
            Disable the IR sensor
            </summary>
        </member>
        <member name="M:WiimoteLib.Wiimote.ClearReport">
            <summary>
            Initialize the report data buffer
            </summary>
        </member>
        <member name="M:WiimoteLib.Wiimote.WriteReport">
            <summary>
            Write a report to the Wiimote
            </summary>
        </member>
        <member name="M:WiimoteLib.Wiimote.ReadData(System.Int32,System.Int16)">
            <summary>
            Read data or register from Wiimote
            </summary>
            <param name="address">Address to read</param>
            <param name="size">Length to read</param>
            <returns>Data buffer</returns>
        </member>
        <member name="M:WiimoteLib.Wiimote.WriteData(System.Int32,System.Byte)">
            <summary>
            Write a single byte to the Wiimote
            </summary>
            <param name="address">Address to write</param>
            <param name="data">Byte to write</param>
        </member>
        <member name="M:WiimoteLib.Wiimote.WriteData(System.Int32,System.Byte,System.Byte[])">
            <summary>
            Write a byte array to a specified address
            </summary>
            <param name="address">Address to write</param>
            <param name="size">Length of buffer</param>
            <param name="buff">Data buffer</param>
        </member>
        <member name="M:WiimoteLib.Wiimote.Dispose">
            <summary>
            Dispose Wiimote
            </summary>
        </member>
        <member name="M:WiimoteLib.Wiimote.Dispose(System.Boolean)">
            <summary>
            Dispose wiimote
            </summary>
            <param name="disposing">Disposing?</param>
        </member>
        <member name="E:WiimoteLib.Wiimote.WiimoteChanged">
            <summary>
            Event raised when Wiimote state is changed
            </summary>
        </member>
        <member name="E:WiimoteLib.Wiimote.WiimoteExtensionChanged">
            <summary>
            Event raised when an extension is inserted or removed
            </summary>
        </member>
        <member name="P:WiimoteLib.Wiimote.WiimoteState">
            <summary>
            Current Wiimote state
            </summary>
        </member>
        <member name="T:WiimoteLib.WiimoteException">
            <summary>
            Represents errors that occur during the execution of the Wiimote library
            </summary>
        </member>
        <member name="M:WiimoteLib.WiimoteException.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:WiimoteLib.WiimoteException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="M:WiimoteLib.WiimoteException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:WiimoteLib.WiimoteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="T:WiimoteLib.Point3F">
            <summary>
            Point structure for floating point 3D positions (X, Y, Z)
            </summary>
        </member>
        <member name="F:WiimoteLib.Point3F.X">
            <summary>
            X, Y, Z coordinates of this point
            </summary>
        </member>
        <member name="F:WiimoteLib.Point3F.Y">
            <summary>
            X, Y, Z coordinates of this point
            </summary>
        </member>
        <member name="F:WiimoteLib.Point3F.Z">
            <summary>
            X, Y, Z coordinates of this point
            </summary>
        </member>
        <member name="M:WiimoteLib.Point3F.ToString">
            <summary>
            Convert to human-readable string
            </summary>
            <returns>A string that represents the point</returns>
        </member>
        <member name="T:WiimoteLib.Point3">
            <summary>
            Point structure for int 3D positions (X, Y, Z)
            </summary>
        </member>
        <member name="F:WiimoteLib.Point3.X">
            <summary>
            X, Y, Z coordinates of this point
            </summary>
        </member>
        <member name="F:WiimoteLib.Point3.Y">
            <summary>
            X, Y, Z coordinates of this point
            </summary>
        </member>
        <member name="F:WiimoteLib.Point3.Z">
            <summary>
            X, Y, Z coordinates of this point
            </summary>
        </member>
        <member name="M:WiimoteLib.Point3.ToString">
            <summary>
            Convert to human-readable string
            </summary>
            <returns>A string that represents the point.</returns>
        </member>
        <member name="T:WiimoteLib.WiimoteState">
            <summary>
            Current overall state of the Wiimote and all attachments
            </summary>
        </member>
        <member name="F:WiimoteLib.WiimoteState.AccelCalibrationInfo">
            <summary>
            Current calibration information
            </summary>
        </member>
        <member name="F:WiimoteLib.WiimoteState.AccelState">
            <summary>
            Current state of accelerometers
            </summary>
        </member>
        <member name="F:WiimoteLib.WiimoteState.ButtonState">
            <summary>
            Current state of buttons
            </summary>
        </member>
        <member name="F:WiimoteLib.WiimoteState.IRState">
            <summary>
            Current state of IR sensors
            </summary>
        </member>
        <member name="F:WiimoteLib.WiimoteState.Battery">
            <summary>
            Current battery level
            </summary>
        </member>
        <member name="F:WiimoteLib.WiimoteState.Rumble">
            <summary>
            Current state of rumble
            </summary>
        </member>
        <member name="F:WiimoteLib.WiimoteState.Extension">
            <summary>
            Is an extension controller inserted?
            </summary>
        </member>
        <member name="F:WiimoteLib.WiimoteState.ExtensionType">
            <summary>
            Extension controller currently inserted, if any
            </summary>
        </member>
        <member name="F:WiimoteLib.WiimoteState.NunchukState">
            <summary>
            Current state of Nunchuk extension
            </summary>
        </member>
        <member name="F:WiimoteLib.WiimoteState.ClassicControllerState">
            <summary>
            Current state of Classic Controller extension
            </summary>
        </member>
        <member name="F:WiimoteLib.WiimoteState.GuitarState">
            <summary>
            Current state of Guitar extension
            </summary>
        </member>
        <member name="F:WiimoteLib.WiimoteState.LEDState">
            <summary>
            Current state of LEDs
            </summary>
        </member>
        <member name="M:WiimoteLib.WiimoteState.#ctor">
            <summary>
            Constructor for WiimoteState class
            </summary>
        </member>
        <member name="T:WiimoteLib.LEDState">
            <summary>
            Current state of LEDs
            </summary>
        </member>
        <member name="F:WiimoteLib.LEDState.LED1">
            <summary>
            LED on the Wiimote
            </summary>
        </member>
        <member name="F:WiimoteLib.LEDState.LED2">
            <summary>
            LED on the Wiimote
            </summary>
        </member>
        <member name="F:WiimoteLib.LEDState.LED3">
            <summary>
            LED on the Wiimote
            </summary>
        </member>
        <member name="F:WiimoteLib.LEDState.LED4">
            <summary>
            LED on the Wiimote
            </summary>
        </member>
        <member name="T:WiimoteLib.NunchukCalibrationInfo">
            <summary>
            Calibration information stored on the Nunchuk
            </summary>
        </member>
        <member name="F:WiimoteLib.NunchukCalibrationInfo.AccelCalibration">
            <summary>
            Accelerometer calibration data
            </summary>
        </member>
        <member name="F:WiimoteLib.NunchukCalibrationInfo.MinX">
            <summary>
            Joystick X-axis calibration
            </summary>
        </member>
        <member name="F:WiimoteLib.NunchukCalibrationInfo.MidX">
            <summary>
            Joystick X-axis calibration
            </summary>
        </member>
        <member name="F:WiimoteLib.NunchukCalibrationInfo.MaxX">
            <summary>
            Joystick X-axis calibration
            </summary>
        </member>
        <member name="F:WiimoteLib.NunchukCalibrationInfo.MinY">
            <summary>
            Joystick Y-axis calibration
            </summary>
        </member>
        <member name="F:WiimoteLib.NunchukCalibrationInfo.MidY">
            <summary>
            Joystick Y-axis calibration
            </summary>
        </member>
        <member name="F:WiimoteLib.NunchukCalibrationInfo.MaxY">
            <summary>
            Joystick Y-axis calibration
            </summary>
        </member>
        <member name="T:WiimoteLib.ClassicControllerCalibrationInfo">
            <summary>
            Calibration information stored on the Classic Controller
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerCalibrationInfo.MinXL">
            <summary>
            Left joystick X-axis 
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerCalibrationInfo.MidXL">
            <summary>
            Left joystick X-axis 
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerCalibrationInfo.MaxXL">
            <summary>
            Left joystick X-axis 
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerCalibrationInfo.MinYL">
            <summary>
            Left joystick Y-axis
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerCalibrationInfo.MidYL">
            <summary>
            Left joystick Y-axis
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerCalibrationInfo.MaxYL">
            <summary>
            Left joystick Y-axis
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerCalibrationInfo.MinXR">
            <summary>
            Right joystick X-axis
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerCalibrationInfo.MidXR">
            <summary>
            Right joystick X-axis
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerCalibrationInfo.MaxXR">
            <summary>
            Right joystick X-axis
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerCalibrationInfo.MinYR">
            <summary>
            Right joystick Y-axis
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerCalibrationInfo.MidYR">
            <summary>
            Right joystick Y-axis
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerCalibrationInfo.MaxYR">
            <summary>
            Right joystick Y-axis
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerCalibrationInfo.MinTriggerL">
            <summary>
            Left analog trigger
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerCalibrationInfo.MaxTriggerL">
            <summary>
            Left analog trigger
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerCalibrationInfo.MinTriggerR">
            <summary>
            Right analog trigger
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerCalibrationInfo.MaxTriggerR">
            <summary>
            Right analog trigger
            </summary>
        </member>
        <member name="T:WiimoteLib.NunchukState">
            <summary>
            Current state of the Nunchuk extension
            </summary>
        </member>
        <member name="F:WiimoteLib.NunchukState.CalibrationInfo">
            <summary>
            Calibration data for Nunchuk extension
            </summary>
        </member>
        <member name="F:WiimoteLib.NunchukState.AccelState">
            <summary>
            State of accelerometers
            </summary>
        </member>
        <member name="F:WiimoteLib.NunchukState.RawJoystick">
            <summary>
            Raw joystick position before normalization.  Values range between 0 and 255.
            </summary>
        </member>
        <member name="F:WiimoteLib.NunchukState.Joystick">
            <summary>
            Normalized joystick position.  Values range between -0.5 and 0.5
            </summary>
        </member>
        <member name="F:WiimoteLib.NunchukState.C">
            <summary>
            Digital button on Nunchuk extension
            </summary>
        </member>
        <member name="F:WiimoteLib.NunchukState.Z">
            <summary>
            Digital button on Nunchuk extension
            </summary>
        </member>
        <member name="T:WiimoteLib.ClassicControllerButtonState">
            <summary>
            Curernt button state of the Classic Controller
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerButtonState.A">
            <summary>
            Digital button on the Classic Controller extension
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerButtonState.B">
            <summary>
            Digital button on the Classic Controller extension
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerButtonState.Plus">
            <summary>
            Digital button on the Classic Controller extension
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerButtonState.Home">
            <summary>
            Digital button on the Classic Controller extension
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerButtonState.Minus">
            <summary>
            Digital button on the Classic Controller extension
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerButtonState.Up">
            <summary>
            Digital button on the Classic Controller extension
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerButtonState.Down">
            <summary>
            Digital button on the Classic Controller extension
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerButtonState.Left">
            <summary>
            Digital button on the Classic Controller extension
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerButtonState.Right">
            <summary>
            Digital button on the Classic Controller extension
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerButtonState.X">
            <summary>
            Digital button on the Classic Controller extension
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerButtonState.Y">
            <summary>
            Digital button on the Classic Controller extension
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerButtonState.ZL">
            <summary>
            Digital button on the Classic Controller extension
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerButtonState.ZR">
            <summary>
            Digital button on the Classic Controller extension
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerButtonState.TriggerL">
            <summary>
            Analog trigger - false if released, true for any pressure applied
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerButtonState.TriggerR">
            <summary>
            Analog trigger - false if released, true for any pressure applied
            </summary>
        </member>
        <member name="T:WiimoteLib.ClassicControllerState">
            <summary>
            Current state of the Classic Controller
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerState.CalibrationInfo">
            <summary>
            Calibration data for Classic Controller extension
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerState.ButtonState">
            <summary>
            Current button state
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerState.RawJoystickL">
            <summary>
            Raw value of left joystick.  Values range between 0 - 255.
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerState.RawJoystickR">
            <summary>
            Raw value of right joystick.  Values range between 0 - 255.
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerState.JoystickL">
            <summary>
            Normalized value of left joystick.  Values range between -0.5 - 0.5
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerState.JoystickR">
            <summary>
            Normalized value of right joystick.  Values range between -0.5 - 0.5
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerState.RawTriggerL">
            <summary>
            Raw value of analog trigger.  Values range between 0 - 255.
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerState.RawTriggerR">
            <summary>
            Raw value of analog trigger.  Values range between 0 - 255.
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerState.TriggerL">
            <summary>
            Normalized value of analog trigger.  Values range between 0.0 - 1.0.
            </summary>
        </member>
        <member name="F:WiimoteLib.ClassicControllerState.TriggerR">
            <summary>
            Normalized value of analog trigger.  Values range between 0.0 - 1.0.
            </summary>
        </member>
        <member name="T:WiimoteLib.GuitarState">
            <summary>
            Current state of the Guitar controller
            </summary>
        </member>
        <member name="F:WiimoteLib.GuitarState.ButtonState">
            <summary>
            Current button state of the Guitar
            </summary>
        </member>
        <member name="F:WiimoteLib.GuitarState.RawJoystick">
            <summary>
            Raw joystick position.  Values range between 0 - 63.
            </summary>
        </member>
        <member name="F:WiimoteLib.GuitarState.Joystick">
            <summary>
            Normalized value of joystick position.  Values range between 0.0 - 1.0.
            </summary>
        </member>
        <member name="F:WiimoteLib.GuitarState.RawWhammyBar">
            <summary>
            Raw whammy bar position.  Values range between 0 - 10.
            </summary>
        </member>
        <member name="F:WiimoteLib.GuitarState.WhammyBar">
            <summary>
            Normalized value of whammy bar position.  Values range between 0.0 - 1.0.
            </summary>
        </member>
        <member name="T:WiimoteLib.GuitarButtonState">
            <summary>
            Current button state of the Guitar controller
            </summary>
        </member>
        <member name="F:WiimoteLib.GuitarButtonState.StrumUp">
            <summary>
            Strum bar
            </summary>
        </member>
        <member name="F:WiimoteLib.GuitarButtonState.StrumDown">
            <summary>
            Strum bar
            </summary>
        </member>
        <member name="F:WiimoteLib.GuitarButtonState.Green">
            <summary>
            Fret buttons
            </summary>
        </member>
        <member name="F:WiimoteLib.GuitarButtonState.Red">
            <summary>
            Fret buttons
            </summary>
        </member>
        <member name="F:WiimoteLib.GuitarButtonState.Yellow">
            <summary>
            Fret buttons
            </summary>
        </member>
        <member name="F:WiimoteLib.GuitarButtonState.Blue">
            <summary>
            Fret buttons
            </summary>
        </member>
        <member name="F:WiimoteLib.GuitarButtonState.Orange">
            <summary>
            Fret buttons
            </summary>
        </member>
        <member name="F:WiimoteLib.GuitarButtonState.Minus">
            <summary>
            Other buttons
            </summary>
        </member>
        <member name="F:WiimoteLib.GuitarButtonState.Plus">
            <summary>
            Other buttons
            </summary>
        </member>
        <member name="T:WiimoteLib.IRSensor">
            <summary>
            Current state of a single IR sensor
            </summary>
        </member>
        <member name="F:WiimoteLib.IRSensor.RawPosition">
            <summary>
            Raw values of individual sensor.  Values range between 0 - 1023 on the X axis and 0 - 767 on the Y axis.
            </summary>
        </member>
        <member name="F:WiimoteLib.IRSensor.Position">
            <summary>
            Normalized values of the sensor position.  Values range between 0.0 - 1.0.
            </summary>
        </member>
        <member name="F:WiimoteLib.IRSensor.Size">
            <summary>
            Size of IR Sensor.  Values range from 0 - 15
            </summary>
        </member>
        <member name="F:WiimoteLib.IRSensor.Found">
            <summary>
            IR sensor seen
            </summary>
        </member>
        <member name="M:WiimoteLib.IRSensor.ToString">
            <summary>
            Convert to human-readable string
            </summary>
            <returns>A string that represents the point.</returns>
        </member>
        <member name="T:WiimoteLib.IRState">
            <summary>
            Current state of the IR camera
            </summary>
        </member>
        <member name="F:WiimoteLib.IRState.Mode">
            <summary>
            Current mode of IR sensor data
            </summary>
        </member>
        <member name="F:WiimoteLib.IRState.IRSensors">
            <summary>
            Current state of IR sensors
            </summary>
        </member>
        <member name="F:WiimoteLib.IRState.RawMidpoint">
            <summary>
            Raw midpoint of IR sensors 1 and 2 only.  Values range between 0 - 1023, 0 - 767
            </summary>
        </member>
        <member name="F:WiimoteLib.IRState.Midpoint">
            <summary>
            Normalized midpoint of IR sensors 1 and 2 only.  Values range between 0.0 - 1.0
            </summary>
        </member>
        <member name="T:WiimoteLib.AccelState">
            <summary>
            Current state of the accelerometers
            </summary>
        </member>
        <member name="F:WiimoteLib.AccelState.RawValues">
            <summary>
            Raw accelerometer data.
            <remarks>Values range between 0 - 255</remarks>
            </summary>
        </member>
        <member name="F:WiimoteLib.AccelState.Values">
            <summary>
            Normalized accelerometer data.  Values range between 0 - ?, but values > 3 and &lt; -3 are inaccurate.
            </summary>
        </member>
        <member name="T:WiimoteLib.AccelCalibrationInfo">
            <summary>
            Accelerometer calibration information
            </summary>
        </member>
        <member name="F:WiimoteLib.AccelCalibrationInfo.X0">
            <summary>
            Zero point of accelerometer
            </summary>
        </member>
        <member name="F:WiimoteLib.AccelCalibrationInfo.Y0">
            <summary>
            Zero point of accelerometer
            </summary>
        </member>
        <member name="F:WiimoteLib.AccelCalibrationInfo.Z0">
            <summary>
            Zero point of accelerometer
            </summary>
        </member>
        <member name="F:WiimoteLib.AccelCalibrationInfo.XG">
            <summary>
            Gravity at rest of accelerometer
            </summary>
        </member>
        <member name="F:WiimoteLib.AccelCalibrationInfo.YG">
            <summary>
            Gravity at rest of accelerometer
            </summary>
        </member>
        <member name="F:WiimoteLib.AccelCalibrationInfo.ZG">
            <summary>
            Gravity at rest of accelerometer
            </summary>
        </member>
        <member name="T:WiimoteLib.ButtonState">
            <summary>
            Current button state
            </summary>
        </member>
        <member name="F:WiimoteLib.ButtonState.A">
            <summary>
            Digital button on the Wiimote
            </summary>
        </member>
        <member name="F:WiimoteLib.ButtonState.B">
            <summary>
            Digital button on the Wiimote
            </summary>
        </member>
        <member name="F:WiimoteLib.ButtonState.Plus">
            <summary>
            Digital button on the Wiimote
            </summary>
        </member>
        <member name="F:WiimoteLib.ButtonState.Home">
            <summary>
            Digital button on the Wiimote
            </summary>
        </member>
        <member name="F:WiimoteLib.ButtonState.Minus">
            <summary>
            Digital button on the Wiimote
            </summary>
        </member>
        <member name="F:WiimoteLib.ButtonState.One">
            <summary>
            Digital button on the Wiimote
            </summary>
        </member>
        <member name="F:WiimoteLib.ButtonState.Two">
            <summary>
            Digital button on the Wiimote
            </summary>
        </member>
        <member name="F:WiimoteLib.ButtonState.Up">
            <summary>
            Digital button on the Wiimote
            </summary>
        </member>
        <member name="F:WiimoteLib.ButtonState.Down">
            <summary>
            Digital button on the Wiimote
            </summary>
        </member>
        <member name="F:WiimoteLib.ButtonState.Left">
            <summary>
            Digital button on the Wiimote
            </summary>
        </member>
        <member name="F:WiimoteLib.ButtonState.Right">
            <summary>
            Digital button on the Wiimote
            </summary>
        </member>
        <member name="T:WiimoteLib.ExtensionType">
            <summary>
            The extension plugged into the Wiimote
            </summary>
        </member>
        <member name="F:WiimoteLib.ExtensionType.None">
            <summary>
            No extension
            </summary>
        </member>
        <member name="F:WiimoteLib.ExtensionType.Nunchuk">
            <summary>
            Nunchuk extension
            </summary>
        </member>
        <member name="F:WiimoteLib.ExtensionType.ClassicController">
            <summary>
            Classic Controller extension
            </summary>
        </member>
        <member name="F:WiimoteLib.ExtensionType.Guitar">
            <summary>
            Guitar controller from Guitar Hero
            </summary>
        </member>
        <member name="T:WiimoteLib.IRMode">
            <summary>
            The mode of data reported for the IR sensor
            </summary>
        </member>
        <member name="F:WiimoteLib.IRMode.Off">
            <summary>
            IR sensor off
            </summary>
        </member>
        <member name="F:WiimoteLib.IRMode.Basic">
            <summary>
            Basic mode
            </summary>
        </member>
        <member name="F:WiimoteLib.IRMode.Extended">
            <summary>
            Extended mode
            </summary>
        </member>
        <member name="F:WiimoteLib.IRMode.Full">
            <summary>
            Full mode (unsupported)
            </summary>
        </member>
        <member name="T:WiimoteLib.InputReport">
            <summary>
            The report format in which the Wiimote should return data
            </summary>	
        </member>
        <member name="F:WiimoteLib.InputReport.Status">
            <summary>
            Status report
            </summary>
        </member>
        <member name="F:WiimoteLib.InputReport.ReadData">
            <summary>
            Read data from memory location
            </summary>
        </member>
        <member name="F:WiimoteLib.InputReport.Buttons">
            <summary>
            Button data only
            </summary>
        </member>
        <member name="F:WiimoteLib.InputReport.ButtonsAccel">
            <summary>
            Button and accelerometer data
            </summary>
        </member>
        <member name="F:WiimoteLib.InputReport.IRAccel">
            <summary>
            IR sensor and accelerometer data
            </summary>
        </member>
        <member name="F:WiimoteLib.InputReport.ButtonsExtension">
            <summary>
            Button and extension controller data
            </summary>
        </member>
        <member name="F:WiimoteLib.InputReport.ExtensionAccel">
            <summary>
            Extension and accelerometer data
            </summary>
        </member>
        <member name="F:WiimoteLib.InputReport.IRExtensionAccel">
            <summary>
            IR sensor, extension controller and accelerometer data
            </summary>
        </member>
        <member name="T:WiimoteLib.IRSensitivity">
            <summary>
            Sensitivity of the IR camera on the Wiimote
            </summary>
        </member>
        <member name="F:WiimoteLib.IRSensitivity.WiiLevel1">
            <summary>
            Equivalent to level 1 on the Wii console
            </summary>
        </member>
        <member name="F:WiimoteLib.IRSensitivity.WiiLevel2">
            <summary>
            Equivalent to level 2 on the Wii console
            </summary>
        </member>
        <member name="F:WiimoteLib.IRSensitivity.WiiLevel3">
            <summary>
            Equivalent to level 3 on the Wii console (default)
            </summary>
        </member>
        <member name="F:WiimoteLib.IRSensitivity.WiiLevel4">
            <summary>
            Equivalent to level 4 on the Wii console
            </summary>
        </member>
        <member name="F:WiimoteLib.IRSensitivity.WiiLevel5">
            <summary>
            Equivalent to level 5 on the Wii console
            </summary>
        </member>
        <member name="F:WiimoteLib.IRSensitivity.Maximum">
            <summary>
            Maximum sensitivity
            </summary>
        </member>
        <member name="T:WiimoteLib.WiimoteExtensionChangedEventArgs">
            <summary>
            Argument sent through the WiimoteExtensionChangedEvent
            </summary>
        </member>
        <member name="F:WiimoteLib.WiimoteExtensionChangedEventArgs.ExtensionType">
            <summary>
            The extenstion type inserted or removed
            </summary>
        </member>
        <member name="F:WiimoteLib.WiimoteExtensionChangedEventArgs.Inserted">
            <summary>
            Whether the extension was inserted or removed
            </summary>
        </member>
        <member name="M:WiimoteLib.WiimoteExtensionChangedEventArgs.#ctor(WiimoteLib.ExtensionType,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="type">The extension type inserted or removed</param>
            <param name="inserted">Whether the extension was inserted or removed</param>
        </member>
        <member name="T:WiimoteLib.WiimoteChangedEventArgs">
            <summary>
            Argument sent through the WiimoteChangedEvent
            </summary>
        </member>
        <member name="F:WiimoteLib.WiimoteChangedEventArgs.WiimoteState">
            <summary>
            The current state of the Wiimote and extension controllers
            </summary>
        </member>
        <member name="M:WiimoteLib.WiimoteChangedEventArgs.#ctor(WiimoteLib.WiimoteState)">
            <summary>
            Constructor
            </summary>
            <param name="ws">Wiimote state</param>
        </member>
    </members>
</doc>
